name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches:
      - main  # Executa o pipeline quando houver push na branch 'main'.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Configuração do repositório
    - name: Checkout do código
      uses: actions/checkout@v3

    # Configuração do Java
    - name: Configurar Java
      uses: actions/setup-java@v3
      with:
        java-version: '17' # Altere para a versão que sua aplicação usa
        distribution: 'temurin'

    # Construir o projeto
    - name: Build do projeto com Maven
      run: |
        mvn dependency:go-offline -B
        mvn clean package -DskipTests

    # Criar imagem Docker
    - name: Configurar Docker
      uses: docker/setup-buildx-action@v2

    - name: Login no Docker Registry
      uses: docker/login-action@v2
      with:
        registry: docker.io  # Substitua se estiver usando outro registry
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Criar e enviar imagem Docker
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:latest

    # Configurar kubectl
    - name: Configurar kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Configurar kubeconfig
    - name: Adicionar kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig
        export KUBECONFIG=kubeconfig

    # Aplicar os manifests no Kubernetes
    - name: Aplicar Deployment e Service
      run: |
        kubectl apply -f k8s/deployment.yml
        kubectl apply -f k8s/service.yml
